@using DuAn2811_.Models
@using Microsoft.IdentityModel.Tokens
@using Server._2811._2004.model1
@model SanPhamViewModel

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Chi tiết sản phẩm -</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link href="~/css/chitietsanpham.css" rel="stylesheet" asp-append-version="true" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
    <style>
        .capacity-options button, .color-options button {
            padding: 8px 15px;
            margin-right: 5px;
            border: 1px solid #ccc;
            border-radius: 5px;
            cursor: pointer;
            background-color: white;
        }

            .capacity-options button.selected, .color-options button.selected {
                border-color: blue;
                font-weight: bold;
            }
    </style>
</head>
<body>
    <div class="product-detail-container">
        <div class="product-image-section">
            @if (Model?.Anh != null && Model.Anh.Any())
            {
                <img src="@Model.Anh.First()" alt="@Model.MoTa" class="product-main-image" />
                @if (Model.Anh.Count() > 1)
                {
                    <div class="product-thumbnails">
                        @foreach (var imageUrl in Model.Anh)
                        {
                            <img src="@imageUrl" alt="@Model.MoTa" class="product-thumbnail-image" data-main-image="@imageUrl" />
                        }
                    </div>
                }
            }
            else
            {
                <p>Không có ảnh</p>
            }
        </div>
        <div class="product-info-section">
            <h1 class="product-name">
                @Model?.MoTa
            </h1>
            <div class="product-status">
                @foreach (var soluong in Model.QuanLyTonKhos)
                {
                    @if(soluong.SoLuongTon > 0 || soluong.SoLuongTon != null)
                    {
                        <i class="fa fa-check-circle" style="color: green;">Còn hàng</i>

                    }
                    else
                    {
                        <i class="fa fa-check-circle" style="color: green;">hết hàng</i>
                    }
                }

            </div >

            @* thong tin duong luong dien thoai *@
            <div class="capacity-options">
                <p>Dung lượng:</p>
                @if (Model?.ChiTietSanPhams != null)
                {
                    var distinctCapacities = Model.ChiTietSanPhams.Select(ct => ct.ThuocTinh).Distinct().ToList();
                    @foreach (var capacity in distinctCapacities)
                    {
                        <button type="button" data-capacity="@capacity">@capacity</button>
                    }
                }
            </div>
            <div class="color-options">
                <p>Màu sắc:</p>
                @if (Model?.ChiTietSanPhams != null)
                {
                    var distinctColors = Model.ChiTietSanPhams.Select(ct => ct.Mau).Distinct().ToList();
                    @foreach (var color in distinctColors)
                    {
                        <button type="button" data-color="@color">@color</button>
                    }
                }
            </div>
            <div class="product-price-section">
                <span class="product-price">
                    @if (Model?.ChiTietSanPhams != null && Model.ChiTietSanPhams.Any())
                    {
                        @Model.ChiTietSanPhams.FirstOrDefault()?.Gia
                       
                    }
                    else
                    {
                        <span>Chưa có giá</span>
                    }
                </span>
            </div>
            <div class="product-warranty">
                Bảo hành: Chính hãng đến 03/03/2026
            </div>

            <div class="promotion-selection">
                <p class="promotion-title"><i class="fa fa-gift"></i> Khuyến mãi:</p>
                @if (Model?.ChiTietKhuyenMais != null && Model.ChiTietKhuyenMais.Any())
                {
                    <form id="promotionForm">
                        <ul class="promotion-list">
                            @foreach (var ctkm in Model.ChiTietKhuyenMais)
                            {
                                <li>
                                    <input type="radio" id="promotion_@ctkm.MaChiTietKhuyenMai" name="selectedPromotion" value="@ctkm.MaChiTietKhuyenMai" />
                                    <label for="promotion_@ctkm.MaChiTietKhuyenMai">@ctkm.MoTaKhuyenMai</label>
                                </li>
                            }
                        </ul>
                    </form>
                    <a href="#" class="view-all-promotions">Xem tất cả khuyến mãi</a>
                }
                else
                {
                    <p>Không có khuyến mãi áp dụng.</p>
                }
            </div>

            <div class="product-actions">
                <button class="add-to-cart-button"><i class="fa fa-shopping-cart"></i> Thêm vào giỏ</button>
                <button class="buy-now-button">Mua ngay</button>
            </div>

            <div class="installment-info">
                <div class="installment-item">
                    <i class="fa fa-percent"></i> Trả góp 0%<br><span class="installment-detail">Duyệt hồ sơ trong 5 phút</span>
                </div>
                <div class="installment-item">
                    <i class="fa fa-credit-card"></i> Trả chậm qua thẻ<br><span class="installment-detail">Visa, Mastercard, JCB, Amex</span>
                </div>
            </div>

            <p class="call-support"><i class="fa fa-phone"></i> Gọi đặt mua <a href="tel:0862451360">0862451360</a> (8:00 - 21:30)</p>
            <a href="#" class="view-store-availability"><i class="fa fa-store"></i> Xem siêu thị có hàng</a>
        </div>
    </div>

    <div class="product-specifications-section">
        <h2>Thông số kỹ thuật</h2>
        <hr class="section-divider">
        <div class="specification-list">
            <div class="specification-item">
                <span class="specification-name">Cấu hình & Bộ nhớ</span>
                <i class="fa fa-chevron-right"></i>
            </div>
            <div class="specification-item">
                <span class="specification-name">Camera & Màn hình</span>
                <i class="fa fa-chevron-right"></i>
            </div>
            <div class="specification-item">
                <span class="specification-name">Pin & Sạc</span>
                <i class="fa fa-chevron-right"></i>
            </div>
            <div class="specification-item">
                <span class="specification-name">Tiện ích</span>
                <i class="fa fa-chevron-right"></i>
            </div>
            <div class="specification-item">
                <span class="specification-name">Kết nối</span>
                <i class="fa fa-chevron-right"></i>
            </div>
            <div class="specification-item">
                <span class="specification-name">Thiết kế & Chất liệu</span>
                <i class="fa fa-chevron-right"></i>
            </div>
        </div>
    </div>
    <div class="rating-container">
        <h2 class="rating-title">Đánh giá Điện thoại </h2>

        <div class="overall-rating">
            <span class="star-icon-overall star"></span>
            <span class="rating-value">5</span>
            <span class="out-of">/5</span>
        </div>
        <p class="customer-satisfaction">15,2k khách hàng hài lòng <span title="Thông tin thêm">(?)</span></p>

        <div class="rating-breakdown">
            <div class="rating-bar">
                <span class="star-icon-breakdown star"></span>
                <div class="progress-bar-container">
                    <div class="progress-bar" style="width: 100%;"></div>
                </div>
                <span class="percentage">100%</span>
            </div>
            <div class="rating-bar">
                <span class="star-icon-breakdown star"></span>
                <div class="progress-bar-container">
                    <div class="progress-bar" style="width: 0%;"></div>
                </div>
                <span class="percentage">0%</span>
            </div>
            <div class="rating-bar">
                <span class="star-icon-breakdown star"></span>
                <div class="progress-bar-container">
                    <div class="progress-bar" style="width: 0%;"></div>
                </div>
                <span class="percentage">0%</span>
            </div>
            <div class="rating-bar">
                <span class="star-icon-breakdown star"></span>
                <div class="progress-bar-container">
                    <div class="progress-bar" style="width: 0%;"></div>
                </div>
                <span class="percentage">0%</span>
            </div>
            <div class="rating-bar">
                <span class="star-icon-breakdown star"></span>
                <div class="progress-bar-container">
                    <div class="progress-bar" style="width: 0%;"></div>
                </div>
                <span class="percentage">0%</span>
            </div>
        </div>

        <button class="write-review-button">Viết đánh giá</button>
    </div>
        
   <br />
    <div class="product-specifications-section">
        <h2>
            sản phẩm liên quan
        </h2>
    </div>
</body>
</html>
<script>
        document.addEventListener('DOMContentLoaded', function() {
        const mainImage = document.querySelector('.product-main-image');
        const thumbnailImages = document.querySelectorAll('.product-thumbnail-image');

        thumbnailImages.forEach(thumbnail => {
            thumbnail.addEventListener('click', function() {
                const newMainImageSrc = this.dataset.mainImage;
                mainImage.src = newMainImageSrc;

                // Loại bỏ lớp 'active' khỏi tất cả thumbnails
                thumbnailImages.forEach(img => img.classList.remove('active'));
                // Thêm lớp 'active' vào thumbnail vừa được click
                this.classList.add('active');
            });
        });

        // Thiết lập thumbnail đầu tiên là active khi trang tải (nếu có thumbnails)
        if (thumbnailImages.length > 0) {
            thumbnailImages[0].classList.add('active');
        }
    });
        document.addEventListener('DOMContentLoaded', function() {
        const mainImage = document.querySelector('.product-main-image');
        const thumbnailImages = document.querySelectorAll('.product-thumbnail-image');
        const capacityButtons = document.querySelectorAll('.capacity-options button');
        const colorButtons = document.querySelectorAll('.color-options button');
        const priceDisplay = document.getElementById('productPrice');

        let selectedCapacity = capacityButtons.length > 0 ? capacityButtons[0].dataset.capacity : null;
        let selectedColor = colorButtons.length > 0 ? colorButtons[0].dataset.color : null;

        thumbnailImages.forEach(thumbnail => {
            thumbnail.addEventListener('click', function() {
                const newMainImageSrc = this.dataset.mainImage;
                mainImage.src = newMainImageSrc;

                thumbnailImages.forEach(img => img.classList.remove('active'));
                this.classList.add('active');
            });
        });

        if (thumbnailImages.length > 0) {
            thumbnailImages[0].classList.add('active');
        }

        function updatePrice() {
            if (Model && Model.ChiTietSanPhams && selectedCapacity && selectedColor) {
                const variant = Model.ChiTietSanPhams.find(ct => ct.ThuocTinh === selectedCapacity && ct.Mau === selectedColor);
                if (variant) {
                    priceDisplay.textContent = variant.Gia;
                    // Cập nhật ảnh chính nếu có ảnh tương ứng với biến thể (nếu thông tin ảnh được lưu trong ChiTietSanPham)
                    // Ví dụ (giả định bạn có thuộc tính AnhBienThe trong ChiTietSanPhamViewModel):
                    // if (variant.AnhBienThe) {
                    //     mainImage.src = variant.AnhBienThe;
                    //     // Cập nhật thumbnails nếu cần
                    // }
                } else if (Model.ChiTietSanPhams.length > 0) {
                    // Nếu không tìm thấy biến thể phù hợp, hiển thị giá mặc định hoặc thông báo
                    priceDisplay.textContent = Model.ChiTietSanPhams[0].Gia;
                    // Có thể reset ảnh chính về ảnh đầu tiên
                    if (Model.Anh && Model.Anh.length > 0) {
                        mainImage.src = Model.Anh[0];
                        // Cập nhật active thumbnail
                        thumbnailImages.forEach(img => img.classList.remove('active'));
                        if (thumbnailImages.length > 0) {
                            thumbnailImages[0].classList.add('active');
                        }
                    } else {
                        priceDisplay.textContent = "Chưa có giá";
                        mainImage.src = ""; // Hoặc ảnh mặc định không có
                    }
                } else {
                    priceDisplay.textContent = "Chưa có giá";
                    mainImage.src = ""; // Hoặc ảnh mặc định không có
                }
            } else if (Model?.ChiTietSanPhams?.length > 0) {
                // Trường hợp ban đầu hoặc khi chỉ có một biến thể
                priceDisplay.textContent = Model.ChiTietSanPhams[0].Gia;
            } else {
                priceDisplay.textContent = "Chưa có giá";
            }
        }

        capacityButtons.forEach(button => {
            button.addEventListener('click', function() {
                capacityButtons.forEach(btn => btn.classList.remove('selected'));
                this.classList.add('selected');
                selectedCapacity = this.dataset.capacity;
                updatePrice();
            });
            // Set initial selected state for the first capacity button
            if (capacityButtons.length > 0 && button === capacityButtons[0]) {
                button.classList.add('selected');
            }
        });

        colorButtons.forEach(button => {
            button.addEventListener('click', function() {
                colorButtons.forEach(btn => btn.classList.remove('selected'));
                this.classList.add('selected');
                selectedColor = this.dataset.color;
                updatePrice();
            });
            // Set initial selected state for the first color button
            if (colorButtons.length > 0 && button === colorButtons[0]) {
                button.classList.add('selected');
            }
        });

        // Gọi updatePrice ban đầu để hiển thị giá của biến thể được chọn mặc định
        updatePrice();
    });
</script>